use os;
use uo;
use cliloc;

include ":attributes:attributes";
include ":magery:spells";
include "include/client";
include "include/objtype";
include ":magery:isValidLoc";

program spell_gate(parms)
  var caster := parms[1];
  var info := parms[2];

  var cast_on := MS_Target(caster, info.targ, "Select a target.", TGTOPT_CHECK_LOS+TGTOPT_NEUTRAL);
   if (!cast_on)
        SendSysMessageCL(caster, 1042023, color := 33); // Cancelled.
        return 0;
    endif
  if((!cast_on.IsRecallRune()) && (cast_on.objtype != 0x16100))
    SendSysMessage(caster, "You can only cast that on a recall rune!");
	return;
  endif
  if(!ReserveItem(cast_on))
    SendSysMessageCL(caster, 1062343, color := 33); // That item is currently in use.
    return;
  endif
  if(Distance(caster, cast_on) > 2)
      SendSysMessageCL(caster, 501975, color := 33); // That is too far away.
      return 0;
  endif
  if(!Accessible(caster, cast_on))
    SendSysMessageCL(caster, 1078497, color := 33); // You cannot use that right now.
    return 0;
  endif
  if((!CheckLosAt(caster, cast_on.x, cast_on.y, cast_on.z) && !cast_on.container))
      SendSysMessageCL(caster, 500876, color := 33); // You can't see that.
      return 0;
  endif
  if(GetObjProperty(cast_on, "Vendored"))
    SendSysMessage(caster, "You cannot recall off of runes on a vendor", color := 33); // That rune is not yet marked.
    return;
  endif
  var dest := cast_on.GetDestination();

  if(!dest.realm)
	SendSysMessageCL(caster, 501803, color := 33); // That rune is not yet marked.
	return 0;
  endif
  var tox := CInt(dest.x);
  var toy := CInt(dest.y);
  var toz := CInt(dest.z);
  var torealm := dest.realm;
  if (torealm != caster.realm)
	SendSysMessageCL(caster, 1005570, color := 33); // You cannot gate to another facet.
	return;
  endif
  if(!ReserveItem(cast_on))
    return;
  endif
  if(GetObjProperty(cast_on, "Vendored"))
    SendSysMessage(caster, "You cannot gate off of runes on a vendor");
    return;
  endif
  if(!isValidLoc(tox,toy))
    SendSysMessage(caster, "Ethereal forces bar you from gating there.", color := 33);
	SendSysMessageCL(caster, 502632, color := 33); // The spell fizzles.
    ReleaseItem(cast_on);
    return;
  endif
  PlaySoundEffect( caster, SFX_SPELL_GATE_TRAVEL );
  var chk := 0;
  if((caster.x >= 5120) && (caster.x <= 5375) && (caster.y >= 0) && (caster.y <= 255))
    SendSysMessage(caster, "Ethereal forces bar you from gating there.");
	SendSysMessageCL(caster, 502632, color := 33); // The spell fizzles.
    chk := 1;
  endif
  var multicheck := CreateItemAtLocation(5833, 1125, 0, 0xeed, 1, _DEFAULT_REALM); // newmap problem
  multicheck.hidden := 1;
  if(!MoveObjectToLocation(multicheck, tox, toy, toz, caster.realm, MOVEOBJECT_NORMAL)) // realm gating and recall issues
    SendSysMessage(caster, "Ethereal forces bar you from gating there.");
	SendSysMessageCL(caster, 502632, color := 33); // The spell fizzles.
    chk := 1;
  endif
  if(multicheck.multi)
    SendSysMessage(caster,"something is blocking the location");
    chk := 1;
  endif
  DestroyItem(multicheck);

// Check for static houses
    var signs := ListItemsNearLocationOfType( tox, toy, toz, 30, 0x160ff);
    foreach item in signs
      var infoarr := GetObjProperty( item, "homeinfo" );
      if (infoarr)
        if ((tox >= infoarr[2]) and (tox <= infoarr[4]) and (toy >= infoarr[3]) and (toy <= infoarr[5]))
			SendSysMessage(caster, "Ethereal forces bar you from gating there.", color := 33);
			SendSysMessageCL(caster, 502632, color := 33); // The spell fizzles.
          return;
        endif
      endif
    endforeach
// End static house check.


  if(chk == 1)
    return;
  endif
  if((tox >= 5120) && (tox <= 5375) && (toy >= 0) && (toy <= 255))
    SendSysMessage(caster, "Ethereal forces bar you from gating there.", color := 33);
	SendSysMessageCL(caster, 502632, color := 33); // The spell fizzles.
    return;
  endif
  var wx := caster.x;
  var wy := caster.y;
  var wz := caster.z;
  PlayStationaryEffect( wx, wy, wz, 6899, 1, 30, explode := 0, realm := caster.realm );
  PlayStationaryEffect( tox, toy, toz, 6899, 1, 30, explode := 0, realm := torealm );
  sleepms(2800);
  set_critical( 1 );
  var gate1 := CreateItemAtLocation( wx, wy, wz, UOBJ_BLUE_MOONGATE, 1, caster.realm );
  gate1.movable := 0;
  var gate2 := CreateItemAtLocation( tox, toy, toz, UOBJ_BLUE_MOONGATE, 1, torealm );
  gate2.movable := 0;
  if(!gate1)
    DestroyItem(gate2);
    SendSysMessage(caster, "something is interfering with the spell");
    return;
  endif
  if (!gate2)
    DestroyItem(gate1);
    SendSysMessage(caster, "something is interfering with the spell");
    return;
  endif
  set_critical(0);
  SetObjProperty( gate1, "GateDestX", gate2.x );
  SetObjProperty( gate1, "GateDestY", gate2.y );
  SetObjProperty( gate1, "GateDestZ", gate2.z );
  SetObjProperty( gate1, "DestRealm", gate2.realm );
  SetObjProperty( gate2, "GateDestX", gate1.x );
  SetObjProperty( gate2, "GateDestY", gate1.y );
  SetObjProperty( gate2, "GateDestZ", gate1.z );
  SetObjProperty( gate2, "DestRealm", gate1.realm );
  Detach();
  sleep(30);
  set_critical(1);
  DestroyItem( gate1 );
  DestroyItem( gate2 );
  set_critical(0);
endprogram
