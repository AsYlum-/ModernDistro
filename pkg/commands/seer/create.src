use uo;
use os;
use cliloc;
use polsys;
use cfgfile;

include ":gumps:gumps";
include ":gumps:requestGump";

//1114057 1114778 1114779 1150340
program textcmd_Create( mobile, text )

	text := SplitWords( text );
	var item := text[1],
		amount := CInt( text[2] );
	
	if( item.Length() < 1 )
		BuildSearchGump( mobile );
		return 1;
	endif

	if( !CInt( item ) )
		item := GetObjtypeByName( item );
		if ( !item )
			BuildSearchGump( mobile, text[1] );
			return 1;
		endif
		item := CInt( item );
	endif
	
	if( amount < 1 )
		amount := 1;
	endif
	
	var create_item := CreateItem( mobile, item, amount );
	if( !create_item )
		BuildSearchGump( mobile, item );
		return 1;
	endif

	return 1;
endprogram

function StrCompare( text )
	var master_array := Array, item_struct := Struct;
	var itemdesc_cfg := ReadConfigFile( ":*:itemdesc" );
	var cfg_int_keys, item_descriptor;
	if( itemdesc_cfg )
		cfg_int_keys := GetConfigIntKeys( itemdesc_cfg );
		foreach key in cfg_int_keys
			item_descriptor := GetItemDescriptor( key );
			if( Find( Lower( item_descriptor.Name ), Lower( text ), 1 ) )
				item_struct.+Objtype := key;
				item_struct.+Name := item_descriptor.name;
			
				master_array.Append( item_struct );
				item_struct := Struct;
			endif
			SleepMS( 1 );
		endforeach
	endif

	return master_array;
endfunction

function BuildSearchGump( mobile, text := "" )
	var search_string, explicitSearch := "";
	var search_results := Array;
	// SendSysMessage( mobile, ""+text, 0x3, 0x42 );
	while( 1 )
		var gump := GFCreateGump( 25, 65 );
		var PageNum := 1;
		if( text.length() < 3 && text.length() > 0 )
			explicitSearch := "Your search term was too short.(Must be longer than 2 letters long.)";
			text := "";
		elseif( text == "" )
			explicitSearch := "No results to display.";
		else
			search_results := StrCompare( text );
			if( search_results.Size() < 1 )
				explicitSearch := "Nothing matched your search terms."; 
			endif
		endif
		
		GFPage( gump, 0 );
		GFDisposable( gump, 0 );
		GFResizePic( gump, 0, 0, 9250, 426, 286 );
		GFPicTiled( gump, 13, 13, 400, 20, 2624 );
		GFAddAlphaRegion( gump, 13, 13, 400, 20 );
		GFPicTiled( gump, 43, 13, 184, 20, 3004 ); // White Border around search box
		GFPicTiled( gump, 44, 14, 182, 18, 2624 ); // Black background of search box
		GFAddAlphaRegion( gump, 44, 14, 182, 18 ); // Transparency of black background of search box
		GFAddButton( gump, 13, 12, 4011, 4013, GF_CLOSE_BTN, 0x1771 ); // Initiate Search string button
		
		search_string := GFTextEntry( gump, 46, 12, 180, 20, 0x480, text, 0 );

		GFAddHTMLLocalized( gump, 232, 13, 100, 20, 3010005, 0, 0, 0x7FFF ); // Color 0x7FFF
		GFPicTiled( gump, 13, 43, 400, 200, 2624 );
		GFAddAlphaRegion( gump, 13, 43, 400, 200 );
		GFPicTiled( gump, 13, 253, 400, 20, 2624 );
		GFAddAlphaRegion( gump, 13, 253, 400, 20 );
		GFAddButton( gump, 383, 252, 4017, 4019, GF_CLOSE_BTN, 0x1770 );
		
		GFPage( gump, 1 );
		var i := 1, pageCount := 0, index;
		if( search_results.Size() > 0 )
			for( i:=0; i<search_results.Size(); i++ )
				index := CInt( i % 10 );
				GFAddButton( gump, 13, 42 +( index * 20 ), 4023, 4025, GF_CLOSE_BTN, 100+i );
				GFAddHTMLLocalized( gump, 47, 44 +( index * 20 ), 300, 20, 1114057, 0, 0, 0x7FFF, search_results[i+1].Name );
				pageCount += 1;
				if( pageCount == 10 && i+1 < search_results.Size() )
				  GFAddButton( gump, 213, 252, 4005, 4007, GF_PAGE_BTN, PageNum+1 );
				  GFAddHTMLLocalized( gump, 247, 254, 170, 20, 1061027, 0, 0, 0x7FFF ); // Next page
				  PageNum += 1;
				  GFPage( gump, PageNum );
				  GFAddButton( gump, 13, 252, 4014, 4016, GF_PAGE_BTN, PageNum-1 );
				  GFAddHTMLLocalized( gump, 47, 254, 170, 20, 1061028, 0, 0, 0x7FFF ); // Previous Page
				  pageCount := 0;
				endif
				SleepMS( 3 );
			endfor 
		else
			GFAddHTMLLocalized( gump, 18, 44, 396, 40, 1114057, 0, 0, 0x7FFF, explicitSearch );
		endif
		
		var result := GFSendGump( mobile, gump );
			text := GFExtractData( result, search_string );
			result := result[0];
		// SendSysMessage( mobile, ""+result+" Array size "+search_results.Size(), 0x3, 0x42 );
		if( result == 0x1770 || result[0] <= 1 )
			SendSysMessageCL( mobile, 1042021, array, 0x3, 0x22 );
			return 0;
		endif
		
		if( result == 0x1771 )
			continue;
		endif
		
		// Add createitem stuff here.
		var list_index := result-99;
		if( ( list_index ) <= search_results.Size() )
			var amount := RequestGump( mobile, "How many do you wish to create?", "Non stackable items will create 10 items at most.", "1", CANCEL_BTN_ON, 5 );
			if( amount.errortext )
				SendSysMessageCL( mobile, 1042021, array, 0x3, 0x22 );
				return 0;
			elseif( !amount || !CInt( amount ) )
				SendSysMessage( mobile, "You must enter an integer greater than 0.", 0x3, 0x22 );
				return 0;
			elseif( CInt( amount ) > 60000 )
				amount := 60000;
			endif
		
			CreateItem( mobile, search_results[list_index].Objtype, CInt( amount ) );
		endif
	endwhile
	return 0;
endfunction

function CreateItem( mobile, item, amount )
	var created;
	SendSysMessage( mobile, "Hit ESC to create the item in your backpack.", 0x3, 0x42 );
	var targ := TargetCoordinates( mobile );
	if( !targ )
		created := CreateItemInBackpack( mobile, item, amount );
		if( !created )
			if( amount > 10 )
				SendSysMessage( mobile, "Item is not stackable. No more than 10 will be created at a time.", 0x3, 0x22 );
				amount := 10;
			endif
		
			for( amount; amount > 0; amount -= 1 )
				created := CreateItemAtLocation( mobile.x, mobile.y, mobile.z, item, 1, mobile.realm );
				SleepMS(5);
			endfor
		endif
	else
		created := CreateItemAtLocation( targ.x, targ.y, targ.z, item, amount, targ.realm );
		if( !created )
			if( amount > 10 )
				SendSysMessage( mobile, "Item is not stackable. No more than 10 will be created at a time.", 0x3, 0x22 );
				amount := 10;
			endif
		
			for( amount; amount > 0; amount -= 1 )
				created := CreateItemAtLocation( targ.x, targ.y, targ.z, item, 1, targ.realm );
				SleepMS(5);
			endfor
		endif
	endif
	
	if( !created )
		SendSysMessage( mobile, "Error: Could not create "+Hex( item ), 0x3, 0x22 );
		return 0;
	endif

	return 1;
endfunction
